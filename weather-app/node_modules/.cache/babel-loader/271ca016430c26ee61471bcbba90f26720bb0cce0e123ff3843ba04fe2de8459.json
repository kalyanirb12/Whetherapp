{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\OneDrive\\\\Desktop\\\\task\\\\weather-app-starter-main\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { IoMdSearch } from 'react-icons/io';\nimport { ImSpinner8 } from 'react-icons/im';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [data, setData] = useState(null);\n  const [location, setLocation] = useState('India');\n  const [loading, setLoading] = useState(false);\n  const [weatherData, setWeatherData] = useState(null);\n  const [error, setError] = useState(null);\n\n  // Fetch coordinates based on location\n  useEffect(() => {\n    const fetchCoordinates = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const geoUrl = `https://geocoding-api.open-meteo.com/v1/search?name=${location}&count=1&language=en&format=json`;\n        const geoResponse = await axios.get(geoUrl);\n        if (geoResponse.data.results && geoResponse.data.results.length > 0) {\n          const {\n            latitude,\n            longitude\n          } = geoResponse.data.results[0];\n          fetchWeatherData(latitude, longitude); // Fetch weather data based on coordinates\n        } else {\n          setError(\"Location not found. Please enter a valid city or country.\");\n          setWeatherData(null); // Clear any existing weather data\n        }\n      } catch (error) {\n        setError(\"Failed to fetch location. Please try again.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCoordinates();\n  }, [location]);\n\n  // Fetch weather data based on latitude and longitude\n  const fetchWeatherData = async (latitude, longitude) => {\n    try {\n      const weatherUrl = `https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&hourly=temperature_2m`;\n      const weatherResponse = await axios.get(weatherUrl);\n\n      // Check if temperature_2m exists in the response\n      if (weatherResponse.data.hourly && weatherResponse.data.hourly.temperature_2m) {\n        setWeatherData(weatherResponse.data.hourly.temperature_2m[0]); // Use the first temperature entry\n      } else {\n        setError(\"Weather data unavailable. Please try again.\");\n        setWeatherData(null); // Clear any existing weather data\n      }\n    } catch (error) {\n      setError(\"Failed to fetch weather data. Please try again.\");\n    }\n  };\n\n  // Conditional Rendering\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner\",\n      children: /*#__PURE__*/_jsxDEV(ImSpinner8, {\n        className: \"text-5xl animate-spin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter city or country\",\n        value: location,\n        onChange: e => setLocation(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setLocation(location),\n        children: /*#__PURE__*/_jsxDEV(IoMdSearch, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this) : weatherData !== null ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Weather in \", location]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperature: \", weatherData, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Enter a location to get weather information.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"CEoR44fKr6g7FXUuZJ3RqPr9eKU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","IoMdSearch","ImSpinner8","jsxDEV","_jsxDEV","App","_s","data","setData","location","setLocation","loading","setLoading","weatherData","setWeatherData","error","setError","fetchCoordinates","geoUrl","geoResponse","get","results","length","latitude","longitude","fetchWeatherData","weatherUrl","weatherResponse","hourly","temperature_2m","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/USER/OneDrive/Desktop/task/weather-app-starter-main/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { IoMdSearch } from 'react-icons/io';\nimport { ImSpinner8 } from 'react-icons/im';\n\nconst App = () => {\n  const [data, setData] = useState(null);\n  const [location, setLocation] = useState('India');\n  const [loading, setLoading] = useState(false);\n  const [weatherData, setWeatherData] = useState(null);\n  const [error, setError] = useState(null);\n\n  // Fetch coordinates based on location\n  useEffect(() => {\n    const fetchCoordinates = async () => {\n      setLoading(true);\n      setError(null);\n\n      try {\n        const geoUrl = `https://geocoding-api.open-meteo.com/v1/search?name=${location}&count=1&language=en&format=json`;\n        const geoResponse = await axios.get(geoUrl);\n\n        if (geoResponse.data.results && geoResponse.data.results.length > 0) {\n          const { latitude, longitude } = geoResponse.data.results[0];\n          fetchWeatherData(latitude, longitude); // Fetch weather data based on coordinates\n        } else {\n          setError(\"Location not found. Please enter a valid city or country.\");\n          setWeatherData(null); // Clear any existing weather data\n        }\n      } catch (error) {\n        setError(\"Failed to fetch location. Please try again.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchCoordinates();\n  }, [location]);\n\n  // Fetch weather data based on latitude and longitude\n  const fetchWeatherData = async (latitude, longitude) => {\n    try {\n      const weatherUrl = `https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&hourly=temperature_2m`;\n      const weatherResponse = await axios.get(weatherUrl);\n\n      // Check if temperature_2m exists in the response\n      if (weatherResponse.data.hourly && weatherResponse.data.hourly.temperature_2m) {\n        setWeatherData(weatherResponse.data.hourly.temperature_2m[0]); // Use the first temperature entry\n      } else {\n        setError(\"Weather data unavailable. Please try again.\");\n        setWeatherData(null); // Clear any existing weather data\n      }\n    } catch (error) {\n      setError(\"Failed to fetch weather data. Please try again.\");\n    }\n  };\n\n  // Conditional Rendering\n  if (loading) {\n    return (\n      <div className=\"spinner\">\n        <ImSpinner8 className=\"text-5xl animate-spin\" />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"weather-app\">\n      <div className=\"search\">\n        <input\n          type=\"text\"\n          placeholder=\"Enter city or country\"\n          value={location}\n          onChange={(e) => setLocation(e.target.value)}\n        />\n        <button onClick={() => setLocation(location)}>\n          <IoMdSearch />\n        </button>\n      </div>\n\n      {error ? (\n        <p className=\"error\">{error}</p>\n      ) : weatherData !== null ? (\n        <div className=\"weather-info\">\n          <h1>Weather in {location}</h1>\n          <p>Temperature: {weatherData}Â°C</p>\n        </div>\n      ) : (\n        <p>Enter a location to get weather information.</p>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}