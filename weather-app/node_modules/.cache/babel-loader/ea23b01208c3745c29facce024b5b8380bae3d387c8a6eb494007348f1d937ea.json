{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\OneDrive\\\\Desktop\\\\task\\\\weather-app-starter-main\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { IoMdSunny, IoMdRainy, IoMdCloudy, IoMdSnow, IoMdThunderstorm, IoMdSearch } from 'react-icons/io';\nimport { BsCloudHaze2Fill, BsCloudDrizzleFill, BsEye, BsWater, BsThermometer, BsWind } from 'react-icons/bs';\nimport { TbTemperatureCelsius } from 'react-icons/tb';\nimport { ImSpinner8 } from 'react-icons/im';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [data, setData] = useState(null);\n  const [location, setLocation] = useState('India');\n  const [loading, setLoading] = useState(true);\n\n  // Example coordinates for India (New Delhi)\n  const latitude = 28.6139;\n  const longitude = 77.2090;\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const url = `https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&hourly=temperature_2m`;\n        const res = await axios.get(url);\n        setData(res.data);\n      } catch (error) {\n        console.error(\"Error fetching weather data:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [location]);\n\n  // Log data to ensure it's fetched\n  console.log(data);\n\n  // Loading state or data display\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather-app\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: [/*#__PURE__*/_jsxDEV(ImSpinner8, {\n        className: \"spinner-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), \"Loading...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : data ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Weather in \", location]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperature: \", data.hourly.temperature_2m[0], \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Ea/7Yr189WnSld5m39X9DaP0S3o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","IoMdSunny","IoMdRainy","IoMdCloudy","IoMdSnow","IoMdThunderstorm","IoMdSearch","BsCloudHaze2Fill","BsCloudDrizzleFill","BsEye","BsWater","BsThermometer","BsWind","TbTemperatureCelsius","ImSpinner8","jsxDEV","_jsxDEV","App","_s","data","setData","location","setLocation","loading","setLoading","latitude","longitude","fetchData","url","res","get","error","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","hourly","temperature_2m","_c","$RefreshReg$"],"sources":["C:/Users/USER/OneDrive/Desktop/task/weather-app-starter-main/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { IoMdSunny, IoMdRainy, IoMdCloudy, IoMdSnow, IoMdThunderstorm, IoMdSearch } from 'react-icons/io';\nimport { BsCloudHaze2Fill, BsCloudDrizzleFill, BsEye, BsWater, BsThermometer, BsWind } from 'react-icons/bs';\nimport { TbTemperatureCelsius } from 'react-icons/tb';\nimport { ImSpinner8 } from 'react-icons/im';\n\nconst App = () => {\n  const [data, setData] = useState(null);\n  const [location, setLocation] = useState('India');\n  const [loading, setLoading] = useState(true);\n\n  // Example coordinates for India (New Delhi)\n  const latitude = 28.6139;\n  const longitude = 77.2090;\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const url = `https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&hourly=temperature_2m`;\n        const res = await axios.get(url);\n        setData(res.data);\n      } catch (error) {\n        console.error(\"Error fetching weather data:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [location]);\n\n  // Log data to ensure it's fetched\n  console.log(data);\n\n  // Loading state or data display\n  return (\n    <div className=\"weather-app\">\n      {loading ? (\n        <div className=\"loading\">\n          <ImSpinner8 className=\"spinner-icon\" />\n          Loading...\n        </div>\n      ) : data ? (\n        <div>\n          <h1>Weather in {location}</h1>\n          <p>Temperature: {data.hourly.temperature_2m[0]}Â°C</p>\n        </div>\n      ) : (\n        <p>No data available</p>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}