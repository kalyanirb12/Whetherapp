{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\OneDrive\\\\Desktop\\\\task\\\\weather-app-starter-main\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { IoMdSunny, IoMdRainy, IoMdCloudy, IoMdSnow, IoMdThunderstorm, IoMdSearch } from \"react-icons/io\";\nimport { BsCloudHaze2Fill, BsCloudDrizzleFill } from \"react-icons/bs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [location, setLocation] = useState(\"Pune\");\n  const [loading, setLoading] = useState(false);\n  const [weatherData, setWeatherData] = useState(null);\n  const [error, setError] = useState(null);\n  const [country, setCountry] = useState(\"\");\n\n  // Function to get the weather icon based on weather code\n  const getWeatherIcon = code => {\n    if (code === 0) return /*#__PURE__*/_jsxDEV(IoMdSunny, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 28\n    }, this);\n    if (code >= 1 && code <= 3) return /*#__PURE__*/_jsxDEV(IoMdCloudy, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 40\n    }, this);\n    if (code === 45 || code === 48) return /*#__PURE__*/_jsxDEV(BsCloudHaze2Fill, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 44\n    }, this);\n    if (code >= 51 && code <= 57) return /*#__PURE__*/_jsxDEV(BsCloudDrizzleFill, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 42\n    }, this);\n    if (code >= 61 && code <= 67) return /*#__PURE__*/_jsxDEV(IoMdRainy, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 42\n    }, this);\n    if (code >= 71 && code <= 77) return /*#__PURE__*/_jsxDEV(IoMdSnow, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 42\n    }, this);\n    if (code >= 80 && code <= 82) return /*#__PURE__*/_jsxDEV(IoMdRainy, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 42\n    }, this);\n    if (code === 85 || code === 86) return /*#__PURE__*/_jsxDEV(IoMdSnow, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 44\n    }, this);\n    if (code === 95) return /*#__PURE__*/_jsxDEV(IoMdThunderstorm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 29\n    }, this);\n    return /*#__PURE__*/_jsxDEV(IoMdCloudy, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this); // Default icon\n  };\n\n  // Fetch coordinates and weather data based on location\n  useEffect(() => {\n    const fetchWeather = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        // Get coordinates from location name\n        const geoUrl = `https://geocoding-api.open-meteo.com/v1/search?name=${location}&count=1&language=en&format=json`;\n        const geoResponse = await axios.get(geoUrl);\n        if (geoResponse.data.results && geoResponse.data.results.length > 0) {\n          const {\n            latitude,\n            longitude,\n            country\n          } = geoResponse.data.results[0];\n          setCountry(country); // Set the country state\n\n          // Get weather data with weathercode\n          const weatherUrl = `https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&hourly=temperature_2m,weathercode`;\n          const weatherResponse = await axios.get(weatherUrl);\n          if (weatherResponse.data.hourly) {\n            setWeatherData({\n              temperature: weatherResponse.data.hourly.temperature_2m[0],\n              // First hour's temperature\n              weatherCode: weatherResponse.data.hourly.weathercode[0] // First hour's weather code\n            });\n          } else {\n            setError(\"Weather data unavailable. Please try again.\");\n          }\n        } else {\n          setError(\"Location not found. Please enter a valid city or country.\");\n        }\n      } catch (error) {\n        setError(\"Failed to fetch data. Please try again.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchWeather();\n  }, [location]);\n\n  // Get current date, month, and year\n  const currentDate = new Date();\n  const day = currentDate.getDate();\n  const month = currentDate.toLocaleString('default', {\n    month: 'long'\n  });\n  const year = currentDate.getFullYear();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full h-screen bg-gradientBg bg-no-repeat bg-cover bg-center flex flex-col items-center justify-center px-4 lg:px-0\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: \"Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full max-w-[450px] bg-black/20  min-h-[584px] text-white backdrop-blur-[32px] rounded[32px] py-12 px-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter city or country\",\n            value: location,\n            onChange: e => setLocation(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setLocation(location),\n            children: /*#__PURE__*/_jsxDEV(IoMdSearch, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xl mt-4\",\n          children: [month, \" \", day, \", \", year]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this) : weatherData ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-2xl font-semibold\",\n            children: [location, \", \", country]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Temperature: \", weatherData.temperature, \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-[87px]\",\n            children: getWeatherIcon(weatherData.weatherCode)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Enter a location to get weather information.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Card body\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Card bottom\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"yjg49JQs/DDnWjlCyYj/pONsqfc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","IoMdSunny","IoMdRainy","IoMdCloudy","IoMdSnow","IoMdThunderstorm","IoMdSearch","BsCloudHaze2Fill","BsCloudDrizzleFill","jsxDEV","_jsxDEV","App","_s","location","setLocation","loading","setLoading","weatherData","setWeatherData","error","setError","country","setCountry","getWeatherIcon","code","fileName","_jsxFileName","lineNumber","columnNumber","fetchWeather","geoUrl","geoResponse","get","data","results","length","latitude","longitude","weatherUrl","weatherResponse","hourly","temperature","temperature_2m","weatherCode","weathercode","currentDate","Date","day","getDate","month","toLocaleString","year","getFullYear","className","children","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/USER/OneDrive/Desktop/task/weather-app-starter-main/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  IoMdSunny,\n  IoMdRainy,\n  IoMdCloudy,\n  IoMdSnow,\n  IoMdThunderstorm,\n  IoMdSearch,\n} from \"react-icons/io\";\nimport { BsCloudHaze2Fill, BsCloudDrizzleFill } from \"react-icons/bs\";\n\nconst App = () => {\n  const [location, setLocation] = useState(\"Pune\");\n  const [loading, setLoading] = useState(false);\n  const [weatherData, setWeatherData] = useState(null);\n  const [error, setError] = useState(null);\n  const [country, setCountry] = useState(\"\");\n\n  // Function to get the weather icon based on weather code\n  const getWeatherIcon = (code) => {\n    if (code === 0) return <IoMdSunny />;\n    if (code >= 1 && code <= 3) return <IoMdCloudy />;\n    if (code === 45 || code === 48) return <BsCloudHaze2Fill />;\n    if (code >= 51 && code <= 57) return <BsCloudDrizzleFill />;\n    if (code >= 61 && code <= 67) return <IoMdRainy />;\n    if (code >= 71 && code <= 77) return <IoMdSnow />;\n    if (code >= 80 && code <= 82) return <IoMdRainy />;\n    if (code === 85 || code === 86) return <IoMdSnow />;\n    if (code === 95) return <IoMdThunderstorm />;\n    return <IoMdCloudy />; // Default icon\n  };\n\n  // Fetch coordinates and weather data based on location\n  useEffect(() => {\n    const fetchWeather = async () => {\n      setLoading(true);\n      setError(null);\n\n      try {\n        // Get coordinates from location name\n        const geoUrl = `https://geocoding-api.open-meteo.com/v1/search?name=${location}&count=1&language=en&format=json`;\n        const geoResponse = await axios.get(geoUrl);\n\n        if (geoResponse.data.results && geoResponse.data.results.length > 0) {\n          const { latitude, longitude, country } = geoResponse.data.results[0];\n          setCountry(country);  // Set the country state\n\n          // Get weather data with weathercode\n          const weatherUrl = `https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&hourly=temperature_2m,weathercode`;\n          const weatherResponse = await axios.get(weatherUrl);\n\n          if (weatherResponse.data.hourly) {\n            setWeatherData({\n              temperature: weatherResponse.data.hourly.temperature_2m[0], // First hour's temperature\n              weatherCode: weatherResponse.data.hourly.weathercode[0], // First hour's weather code\n            });\n          } else {\n            setError(\"Weather data unavailable. Please try again.\");\n          }\n        } else {\n          setError(\"Location not found. Please enter a valid city or country.\");\n        }\n      } catch (error) {\n        setError(\"Failed to fetch data. Please try again.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchWeather();\n  }, [location]);\n\n  // Get current date, month, and year\n  const currentDate = new Date();\n  const day = currentDate.getDate();\n  const month = currentDate.toLocaleString('default', { month: 'long' });\n  const year = currentDate.getFullYear();\n\n  return (\n    <div className=\"w-full h-screen bg-gradientBg bg-no-repeat bg-cover bg-center flex flex-col items-center justify-center px-4 lg:px-0\">\n      <form>Form</form>\n      <div>\n        <div\n          className=\"w-full max-w-[450px] bg-black/20  min-h-[584px] text-white backdrop-blur-[32px] rounded[32px] py-12 px-6\"\n        >\n          <div className=\"search\">\n            <input\n              type=\"text\"\n              placeholder=\"Enter city or country\"\n              value={location}\n              onChange={(e) => setLocation(e.target.value)}\n            />\n            <button onClick={() => setLocation(location)}>\n              <IoMdSearch />\n            </button>\n          </div>\n\n          {/* Display Current Date, Month, and Year */}\n          <div className=\"text-xl mt-4\">\n            {month} {day}, {year}\n          </div>\n\n          {error ? (\n            <p className=\"error\">{error}</p>\n          ) : weatherData ? (\n            <div className=\"weather-info\">\n              <div className=\"text-2xl font-semibold\">\n                {location}, {country}\n              </div>\n              <p>Temperature: {weatherData.temperature}°C</p>\n              <div className=\"text-[87px]\">{getWeatherIcon(weatherData.weatherCode)}</div>\n            </div>\n          ) : (\n            <p>Enter a location to get weather information.</p>\n          )}\n\n          {/* card top */}\n\n          {/* card body */}\n          <div>Card body</div>\n          {/* card bottom */}\n          <div>Card bottom</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}